## SLURM PROLOG ###############################################################
##    Job ID : 11308380
##  Job Name : run
##  Nodelist : gpu2104
##      CPUs : 
##  Mem/Node : 65536 MB
## Directory : /oscar/home/kguo32/ReAI-loss-of-plasticity/lop/permuted_mnist
##   Job Started : Tue May  6 11:34:49 AM EDT 2025
###############################################################################
step: 0 , approximate rank:  tensor([18., 13., 11.]) , dead neurons:  tensor([0., 0., 0.]) effective rank:  tensor([15.6076, 11.7528, 10.1703])
recent accuracy tensor(0.8682)
step: 1 , approximate rank:  tensor([14., 10.,  9.]) , dead neurons:  tensor([0., 0., 0.]) effective rank:  tensor([11.0256,  8.9672,  8.9365])
recent accuracy tensor(0.9002)
step: 2 , approximate rank:  tensor([13., 10.,  9.]) , dead neurons:  tensor([0., 1., 0.]) effective rank:  tensor([10.7819,  9.0009,  8.7152])
recent accuracy tensor(0.9047)
step: 3 , approximate rank:  tensor([14., 11., 10.]) , dead neurons:  tensor([0., 1., 0.]) effective rank:  tensor([11.5512,  9.8544,  9.7303])
recent accuracy tensor(0.9007)
step: 4 , approximate rank:  tensor([12., 11., 10.]) , dead neurons:  tensor([0., 1., 0.]) effective rank:  tensor([10.3056,  9.8462, 10.1489])
recent accuracy tensor(0.8964)
step: 5 , approximate rank:  tensor([10.,  9.,  9.]) , dead neurons:  tensor([0., 1., 0.]) effective rank:  tensor([8.1977, 8.2971, 8.4997])
recent accuracy tensor(0.8922)
step: 6 , approximate rank:  tensor([9., 9., 9.]) , dead neurons:  tensor([0., 2., 0.]) effective rank:  tensor([7.8891, 8.3778, 8.1969])
recent accuracy tensor(0.8971)
step: 7 , approximate rank:  tensor([11., 10.,  9.]) , dead neurons:  tensor([0., 1., 0.]) effective rank:  tensor([8.9816, 9.1687, 8.9412])
recent accuracy tensor(0.8941)
step: 8 , approximate rank:  tensor([11.,  9., 10.]) , dead neurons:  tensor([0., 1., 2.]) effective rank:  tensor([9.5332, 9.1121, 9.7999])
recent accuracy tensor(0.8966)
step: 9 , approximate rank:  tensor([11.,  8.,  8.]) , dead neurons:  tensor([0., 1., 1.]) effective rank:  tensor([8.4223, 7.3471, 7.1542])
recent accuracy tensor(0.8948)
step: 10 , approximate rank:  tensor([10.,  8.,  9.]) , dead neurons:  tensor([0., 1., 2.]) effective rank:  tensor([8.3175, 7.3788, 8.4847])
recent accuracy tensor(0.8919)
step: 11 , approximate rank:  tensor([10.,  8.,  7.]) , dead neurons:  tensor([0., 2., 1.]) effective rank:  tensor([7.9116, 6.6627, 7.0745])
recent accuracy tensor(0.8915)
step: 12 , approximate rank:  tensor([10.,  8.,  7.]) , dead neurons:  tensor([0., 2., 1.]) effective rank:  tensor([8.1440, 6.4715, 7.4926])
recent accuracy tensor(0.8875)
step: 13 , approximate rank:  tensor([12.,  8.,  8.]) , dead neurons:  tensor([0., 2., 2.]) effective rank:  tensor([9.3914, 7.2989, 8.1477])
recent accuracy tensor(0.8796)
step: 14 , approximate rank:  tensor([10.,  7.,  8.]) , dead neurons:  tensor([0., 3., 1.]) effective rank:  tensor([8.1548, 6.6419, 7.8717])
recent accuracy tensor(0.8879)
step: 15 , approximate rank:  tensor([10.,  7.,  7.]) , dead neurons:  tensor([0., 1., 3.]) effective rank:  tensor([8.3163, 6.1945, 7.1633])
recent accuracy tensor(0.8922)
step: 16 , approximate rank:  tensor([10.,  7.,  7.]) , dead neurons:  tensor([0., 3., 4.]) effective rank:  tensor([7.8831, 6.1448, 6.9662])
recent accuracy tensor(0.8850)
step: 17 , approximate rank:  tensor([10.,  8.,  9.]) , dead neurons:  tensor([0., 2., 1.]) effective rank:  tensor([8.6041, 7.2381, 8.2143])
recent accuracy tensor(0.8878)
step: 18 , approximate rank:  tensor([12.,  8., 10.]) , dead neurons:  tensor([0., 1., 1.]) effective rank:  tensor([9.6452, 7.6045, 9.3608])
recent accuracy tensor(0.8917)
step: 19 , approximate rank:  tensor([11.,  8.,  9.]) , dead neurons:  tensor([0., 3., 1.]) effective rank:  tensor([8.6544, 6.6939, 8.4697])
recent accuracy tensor(0.8792)
