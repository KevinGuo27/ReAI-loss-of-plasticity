## SLURM PROLOG ###############################################################
##    Job ID : 11308382
##  Job Name : run
##  Nodelist : gpu2110
##      CPUs : 
##  Mem/Node : 65536 MB
## Directory : /oscar/home/kguo32/ReAI-loss-of-plasticity/lop/permuted_mnist
##   Job Started : Tue May  6 11:34:44 AM EDT 2025
###############################################################################
step: 0 , approximate rank:  tensor([16., 13., 10.]) , dead neurons:  tensor([0., 0., 0.]) effective rank:  tensor([14.1786, 11.9664,  9.4221])
recent accuracy tensor(0.8409)
step: 1 , approximate rank:  tensor([14.,  9.,  7.]) , dead neurons:  tensor([0., 0., 3.]) effective rank:  tensor([11.3549,  8.2270,  6.9279])
recent accuracy tensor(0.8981)
step: 2 , approximate rank:  tensor([13.,  9.,  7.]) , dead neurons:  tensor([0., 1., 3.]) effective rank:  tensor([10.2755,  7.3845,  6.4168])
recent accuracy tensor(0.8964)
step: 3 , approximate rank:  tensor([12.,  9.,  7.]) , dead neurons:  tensor([0., 1., 3.]) effective rank:  tensor([9.4700, 7.6992, 6.5934])
recent accuracy tensor(0.9032)
step: 4 , approximate rank:  tensor([11.,  8.,  7.]) , dead neurons:  tensor([1., 3., 3.]) effective rank:  tensor([8.3662, 7.1023, 6.9284])
recent accuracy tensor(0.9010)
step: 5 , approximate rank:  tensor([11.,  9.,  7.]) , dead neurons:  tensor([0., 2., 4.]) effective rank:  tensor([8.5585, 7.1714, 7.2325])
recent accuracy tensor(0.9026)
step: 6 , approximate rank:  tensor([12.,  9.,  8.]) , dead neurons:  tensor([1., 1., 2.]) effective rank:  tensor([9.9162, 8.6050, 8.0226])
recent accuracy tensor(0.8985)
step: 7 , approximate rank:  tensor([11.,  8.,  8.]) , dead neurons:  tensor([0., 3., 2.]) effective rank:  tensor([8.5365, 7.3170, 7.4154])
recent accuracy tensor(0.8959)
step: 8 , approximate rank:  tensor([9., 7., 8.]) , dead neurons:  tensor([1., 3., 2.]) effective rank:  tensor([7.0492, 6.6016, 8.0071])
recent accuracy tensor(0.8953)
step: 9 , approximate rank:  tensor([9., 8., 8.]) , dead neurons:  tensor([0., 2., 1.]) effective rank:  tensor([7.5803, 6.9231, 7.3702])
recent accuracy tensor(0.8972)
step: 10 , approximate rank:  tensor([9., 8., 9.]) , dead neurons:  tensor([0., 1., 2.]) effective rank:  tensor([7.5174, 7.5372, 8.1158])
recent accuracy tensor(0.8969)
step: 11 , approximate rank:  tensor([8., 8., 8.]) , dead neurons:  tensor([0., 1., 1.]) effective rank:  tensor([7.1951, 6.7189, 7.4062])
recent accuracy tensor(0.8944)
step: 12 , approximate rank:  tensor([9., 8., 9.]) , dead neurons:  tensor([2., 1., 2.]) effective rank:  tensor([7.3534, 7.7364, 8.4112])
recent accuracy tensor(0.8836)
step: 13 , approximate rank:  tensor([9., 9., 9.]) , dead neurons:  tensor([0., 1., 0.]) effective rank:  tensor([7.3250, 8.2109, 8.4826])
recent accuracy tensor(0.8853)
step: 14 , approximate rank:  tensor([8., 7., 8.]) , dead neurons:  tensor([0., 3., 2.]) effective rank:  tensor([6.2891, 6.5593, 7.6187])
recent accuracy tensor(0.8856)
step: 15 , approximate rank:  tensor([9., 7., 8.]) , dead neurons:  tensor([0., 1., 1.]) effective rank:  tensor([7.1205, 6.4276, 7.9703])
recent accuracy tensor(0.8923)
step: 16 , approximate rank:  tensor([8., 8., 9.]) , dead neurons:  tensor([1., 3., 1.]) effective rank:  tensor([6.7322, 6.9778, 8.6586])
recent accuracy tensor(0.8824)
step: 17 , approximate rank:  tensor([9., 9., 9.]) , dead neurons:  tensor([0., 3., 1.]) effective rank:  tensor([7.2768, 7.3272, 8.9692])
recent accuracy tensor(0.8832)
step: 18 , approximate rank:  tensor([8., 8., 8.]) , dead neurons:  tensor([2., 4., 2.]) effective rank:  tensor([6.1807, 6.3052, 7.6659])
recent accuracy tensor(0.8765)
step: 19 , approximate rank:  tensor([ 9.,  9., 11.]) , dead neurons:  tensor([0., 2., 0.]) effective rank:  tensor([7.1596, 8.3064, 9.8299])
recent accuracy tensor(0.8787)
